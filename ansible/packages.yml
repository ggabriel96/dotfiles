---
- name: Install system packages (Fedora)
  hosts: distro_Fedora
  become: true
  tags:
    - system-packages
    - packages
  tasks:
    - name: Update all
      ansible.builtin.dnf:
        name: "*"
        state: latest

    - name: Install system packages
      ansible.builtin.dnf:
        name:
          - bash-completion
          - chromium
          - clang
          - dnf-plugins-core
          - fedora-workstation-repositories
          - fish
          - gcc-c++
          - gnome-tweaks
          - htop
          - make
          - neovim
          - zsh
        state: latest

    - name: Clean up
      ansible.builtin.dnf:
        autoremove: yes

- name: Install system packages (Ubuntu)
  hosts:
    - distro_Ubuntu
    - distro_Pop!_OS
  become: true
  tags:
    - system-packages
    - packages
  tasks:
    - name: Update all
      ansible.builtin.apt:
        name: "*"
        state: latest
        update_cache: yes

    - name: Add fish shell repository
      ansible.builtin.apt_repository:
        repo: ppa:fish-shell/release-3
        codename: focal
        state: present
        validate_certs: yes

    - name: Install system packages
      ansible.builtin.apt:
        name:
          - apparmor-utils
          - apt-transport-https
          - bash-completion
          - ca-certificates
          - curl
          - fish
          - git
          - gnupg-agent
          - htop
          - make
          - neovim
          - software-properties-common
          - vlc
          - zsh
        update_cache: yes
        state: latest

    - name: Clean up
      ansible.builtin.apt:
        autoclean: yes
        autoremove: yes

- name: Install extra system packages (Pop!_OS)
  hosts: distro_Pop!_OS
  become: true
  tags:
    - system-packages
    - packages
    - pop
  tasks:
    - ansible.builtin.apt:
        name:
          - atom
          - chromium
        update_cache: yes
        state: latest

    - name: Clean up
      ansible.builtin.apt:
        autoclean: yes
        autoremove: yes

- name: Install Miniconda
  hosts: localhost
  vars_files:
    - vars/packages.yml
  tags:
    - dev
    - package-managers
    - packages
    - python
  tasks:
    - name: Check if already installed
      ansible.builtin.stat:
        path: "{{ miniconda_install_dir }}/miniconda3/"
      register: is_miniconda_installed

    - name: End play if already installed
      meta: end_play
      when: is_miniconda_installed.stat.exists

    - name: Download
      ansible.builtin.get_url:
        url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        dest: /tmp/miniconda-install.sh
        mode: "0755"

    - name: Install
      ansible.builtin.command:
        argv:
          - /tmp/miniconda-install.sh
          - -b

    - name: Clean up
      ansible.builtin.file:
        path: /tmp/miniconda-install.sh
        state: absent

- name: Install Fonts
  hosts: localhost
  become: true
  tags:
    - fonts
    - packages
  tasks:
    - ansible.builtin.dnf:
        name:
          - fira-code-fonts
          - google-noto-sans-fonts
          - google-noto-serif-fonts
          - google-noto-emoji-fonts
          - google-noto-emoji-color-fonts
        state: latest
      when: ansible_facts["distribution"] == "Fedora"
    - ansible.builtin.apt:
        name:
          - fonts-firacode
          - fonts-noto
        state: latest
      when: ansible_facts["distribution"] == "Ubuntu" or ansible_facts["distribution"] == "Pop!_OS"

- name: Install Google Cloud SDK
  hosts: localhost
  vars_files:
    - vars/packages.yml
  tags:
    - dev
    - gcp
    - packages
  tasks:
    - name: Check if already installed
      ansible.builtin.stat:
        path: "{{ cloudsdk_install_dir }}/google-cloud-sdk/"
      register: is_cloudsdk_installed

    - name: End play if already installed
      meta: end_play
      when: is_cloudsdk_installed.stat.exists

    - name: Download
      ansible.builtin.get_url:
        url: https://sdk.cloud.google.com
        dest: /tmp/cloudsdk-install.sh
        mode: "0755"

    - name: Install
      ansible.builtin.command:
        argv:
          - /tmp/cloudsdk-install.sh
          - --disable-prompts
          - --install-dir={{ cloudsdk_install_dir }}

    - name: Clean up
      ansible.builtin.file:
        path: /tmp/cloudsdk-install.sh
        state: absent

- name: Setup Flatpak and install packages
  hosts: localhost
  tags:
    - flatpak
    - package-managers
    - packages
  tasks:
    - name: Install Flatpak
      become: true
      ansible.builtin.apt:
        name:
          - flatpak
        state: latest
      when: ansible_facts["distribution"] == "Ubuntu"

    - name: Add Flathub repository
      become: true
      community.general.flatpak_remote:
        name: flathub
        state: present
        method: system
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo

    - name: Install Dropbox
      community.general.flatpak:
        name: com.dropbox.Client
        remote: flathub
        method: system
        state: present

    - name: Install Fondo
      community.general.flatpak:
        name: com.github.calo001.fondo
        remote: flathub
        method: system
        state: present

    - name: Install VLC
      community.general.flatpak:
        name: org.videolan.VLC
        remote: flathub
        method: system
        state: present
      when: ansible_facts["distribution"] == "Fedora"

- name: Setup Snap and install packages
  hosts: localhost
  become: true
  tags:
    - package-managers
    - packages
    - snap
  tasks:
    - ansible.builtin.dnf:
        name:
          - snapd
        state: latest
      when: ansible_facts["distribution"] == "Fedora"

    - name: Symlink
      ansible.builtin.file:
        src: /var/lib/snapd/snap
        dest: /snap
        state: link
      when: ansible_facts["distribution"] == "Fedora"

    - name: Ensure snapd is installed (Ubuntu)
      ansible.builtin.apt:
        name:
          - snapd
        state: latest
      when: ansible_facts["distribution"] == "Ubuntu" or ansible_facts["distribution"] == "Pop!_OS"

    - name: Install packages
      community.general.snap:
        classic: no
        state: present
        channel: stable
        name:
          - spotify

    - name: Install packages requiring classic confinement
      community.general.snap:
        classic: yes
        state: present
        channel: stable
        name:
          - code
          - slack

- name: Install SpaceVim
  hosts: localhost
  vars_files:
    - vars/packages.yml
  tags:
    - dev
    - editors
    - packages
    - vim
  tasks:
    - name: Download
      ansible.builtin.get_url:
        url: https://spacevim.org/install.sh
        dest: /tmp/spacevim-install.sh
        mode: "0755"

    - name: Install
      ansible.builtin.command:
        argv:
          - /tmp/spacevim-install.sh

    - name: Make vimproc
      ansible.builtin.command:
        argv:
          - make
          - -C
          - "{{ ansible_env.HOME }}/.SpaceVim/bundle/vimproc.vim/"

    - name: Clean up
      ansible.builtin.file:
        path: /tmp/spacevim-install.sh
        state: absent

- name: Install Zoom (Fedora)
  hosts: distro_Fedora
  become: true
  tags:
    - meeting
    - packages
    - video
    - zoom
  tasks:
    - name: Add GPG key
      ansible.builtin.rpm_key:
        key: https://zoom.us/linux/download/pubkey
        state: present

    - name: Download package
      ansible.builtin.get_url:
        url: https://zoom.us/client/latest/zoom_x86_64.rpm
        dest: /tmp/zoom.rpm

    - name: Install
      ansible.builtin.dnf:
        name:
          - /tmp/zoom.rpm
        state: latest

    - name: Clean up
      ansible.builtin.file:
        path: /tmp/zoom.rpm
        state: absent

- name: Install Zoom (Ubuntu)
  hosts:
    - distro_Ubuntu
    - distro_Pop!_OS
  become: true
  tags:
    - meeting
    - packages
    - video
    - zoom
  tasks:
    - name: Add GPG key
      ansible.builtin.apt_key:
        keyserver: https://zoom.us/linux/download/pubkey
        id: 396060CADD8A75220BFCB369B903BF1861A7C71D
        state: present

    - name: Download package
      ansible.builtin.get_url:
        url: https://zoom.us/client/latest/zoom_amd64.deb
        dest: /tmp/zoom.deb

    - name: Install
      ansible.builtin.apt:
        deb: /tmp/zoom.deb
        state: present

    - name: Clean up
      ansible.builtin.file:
        path: /tmp/zoom.deb
        state: absent
